package codeSignal.upwork.practice.test;


import java.util.Arrays;

/**
 *
 *
 *      You are given an array of integers a. A new array b is generated by rearranging the elements of a in the following way:
 *
 * b[0] is equal to a[0];
 * b[1] is equal to the last element of a;
 * b[2] is equal to a[1];
 * b[3] is equal to the second-last element of a;
 * b[4] is equal to a[2];
 * b[5] is equal to the third-last element of a;
 * and so on.
 * Your task is to determine whether the new array b is sorted in strictly ascending order or not.
 *
 * Here is how the process of generating the new array b works:
 *
 *
 *
 * Example
 *
 * For a = [1, 3, 5, 6, 4, 2], the output should be solution(a) = true.
 *
 * The new array b will look like [1, 2, 3, 4, 5, 6], which is in strictly ascending order, so the answer is true.
 *
 * For a = [1, 4, 5, 6, 3], the output should be solution(a) = false.
 *
 * The new array b will look like [1, 3, 4, 6, 5], which is not in strictly ascending order, so the answer is false.
 *
 * Input/Output
 *
 * [execution time limit] 3 seconds (java)
 *
 * [input] array.integer a
 *
 * The given array of integers.
 *
 * Guaranteed constraints:
 * 1 ≤ a.length ≤ 105,
 * -109 ≤ a[i] ≤ 109.
 *
 * [output] boolean
 *
 * A boolean representing whether the new array b will be sorted in strictly ascending order or not.
 *
 *
 *
 * **/
public class Task6 {


    public static void main(String[] args) {

        Task6 task6 = new Task6();

       int[] a = {-92, -23, 0, 45, 89, 96, 99, 95, 89, 41, -17, -48};
       // int[] a = {1,2,3,4};
        System.out.println(task6.solution(a));
    }


    boolean solution(int[] a) {

        boolean result = true;

        int[] b = new int[a.length];

        int start = 0;
        int end = a.length-1;
        int index = 0;

        if(a.length == 1)
            return true;

        if(a.length == 2)
            return a[0] < a[1];

        while(start < end) {

            b[index] = a[start];
            index++;
            b[index] = a[end];

         //   if(b[index-1] > b[index] )
         //       return false;

            index++;
            start++;
            end--;
        }

        if(a.length%2 != 0) {
            b[index] = a[start];

           // if(b[index-1] > b[index] )
           //     return false;
        }

        System.out.println(Arrays.toString(b));

        return result;
    }


}
